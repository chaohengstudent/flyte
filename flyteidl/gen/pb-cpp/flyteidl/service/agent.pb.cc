// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/service/agent.proto

#include "flyteidl/service/agent.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace flyteidl {
namespace service {
}  // namespace service
}  // namespace flyteidl
void InitDefaults_flyteidl_2fservice_2fagent_2eproto() {
}

constexpr ::google::protobuf::Metadata* file_level_metadata_flyteidl_2fservice_2fagent_2eproto = nullptr;
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fservice_2fagent_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fservice_2fagent_2eproto = nullptr;
const ::google::protobuf::uint32 TableStruct_flyteidl_2fservice_2fagent_2eproto::offsets[1] = {};
static constexpr ::google::protobuf::internal::MigrationSchema* schemas = nullptr;
static constexpr ::google::protobuf::Message* const* file_default_instances = nullptr;

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fservice_2fagent_2eproto = {
  {}, AddDescriptors_flyteidl_2fservice_2fagent_2eproto, "flyteidl/service/agent.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fservice_2fagent_2eproto::offsets,
  file_level_metadata_flyteidl_2fservice_2fagent_2eproto, 0, file_level_enum_descriptors_flyteidl_2fservice_2fagent_2eproto, file_level_service_descriptors_flyteidl_2fservice_2fagent_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fservice_2fagent_2eproto[] =
  "\n\034flyteidl/service/agent.proto\022\020flyteidl"
  ".service\032\034google/api/annotations.proto\032\032"
  "flyteidl/admin/agent.proto2\314\003\n\021AsyncAgen"
  "tService\022U\n\nCreateTask\022!.flyteidl.admin."
  "CreateTaskRequest\032\".flyteidl.admin.Creat"
  "eTaskResponse\"\000\022L\n\007GetTask\022\036.flyteidl.ad"
  "min.GetTaskRequest\032\037.flyteidl.admin.GetT"
  "askResponse\"\000\022U\n\nDeleteTask\022!.flyteidl.a"
  "dmin.DeleteTaskRequest\032\".flyteidl.admin."
  "DeleteTaskResponse\"\000\022a\n\016GetTaskMetrics\022%"
  ".flyteidl.admin.GetTaskMetricsRequest\032&."
  "flyteidl.admin.GetTaskMetricsResponse\"\000\022"
  "X\n\013GetTaskLogs\022\".flyteidl.admin.GetTaskL"
  "ogsRequest\032#.flyteidl.admin.GetTaskLogsR"
  "esponse\"\0002\360\001\n\024AgentMetadataService\022k\n\010Ge"
  "tAgent\022\037.flyteidl.admin.GetAgentRequest\032"
  " .flyteidl.admin.GetAgentResponse\"\034\202\323\344\223\002"
  "\026\022\024/api/v1/agent/{name}\022k\n\nListAgents\022!."
  "flyteidl.admin.ListAgentsRequest\032\".flyte"
  "idl.admin.ListAgentsResponse\"\026\202\323\344\223\002\020\022\016/a"
  "pi/v1/agentsB\?Z=github.com/flyteorg/flyt"
  "e/flyteidl/gen/pb-go/flyteidl/serviceb\006p"
  "roto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fservice_2fagent_2eproto = {
  false, InitDefaults_flyteidl_2fservice_2fagent_2eproto, 
  descriptor_table_protodef_flyteidl_2fservice_2fagent_2eproto,
  "flyteidl/service/agent.proto", &assign_descriptors_table_flyteidl_2fservice_2fagent_2eproto, 885,
};

void AddDescriptors_flyteidl_2fservice_2fagent_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_google_2fapi_2fannotations_2eproto,
    ::AddDescriptors_flyteidl_2fadmin_2fagent_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fservice_2fagent_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fservice_2fagent_2eproto = []() { AddDescriptors_flyteidl_2fservice_2fagent_2eproto(); return true; }();
namespace flyteidl {
namespace service {

// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace flyteidl
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
